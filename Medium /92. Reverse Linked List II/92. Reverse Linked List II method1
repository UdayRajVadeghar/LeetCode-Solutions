/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseBetween(ListNode head, int left, int right) {

        ListNode current = head;
        Stack<Integer> stack1 = new Stack<>();

        int i = 1 ;

        while(current != null){
            if(i >= left && i <=right){
                stack1.push(current.val);
            }
            current = current.next;
            i++;   
        }

        current = head;
        i = 1;

        while(current != null){
            if(i >= left && i<= right){
                current.val = stack1.pop();
            }
            current = current.next;
            i++;
        }

        return head;
        
        
    }
}
